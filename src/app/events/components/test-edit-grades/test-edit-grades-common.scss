@import "../../../../bootstrap-variables";

/**
 * Common table styles for the TestEditGradesComponent & the TestEditGradesHeaderComponent
 */

:host {
  --student-name-column-width: 225px;
  --student-grade-column-width: 147px;
  --student-average-column-width: 100px;
  --test-grade-column-width: 300px;
  --point-input-size: 4em;

  --student-grade-column-offset: var(--student-name-column-width);
  --student-average-column-offset: calc(
    var(--student-grade-column-offset) + var(--student-grade-column-width)
  );
  --test-columns-offset: calc(
    var(--student-average-column-offset) + var(--student-average-column-width)
  );
  #stickyHeader {
    display: none;
  }
  .scroll-test-table {
    display: table-caption;
    overflow-y: scroll;
    height: 80vh;
  }
}

$student-name-width-breakpoint: 1000px;
$student-average-breakpoint: 1200px;

@media (min-width: $student-name-width-breakpoint) {
  :host {
    // Student name column should be narrower below 1000px and wider above
    --student-name-column-width: 275px;
  }
}

th,
td {
  padding: $spacer;
}

td {
  vertical-align: middle;
}

@include media-breakpoint-up(sm) {
  :host {
    --point-input-size: 5em;
  }
}

tr:not(.header-collapsible) th.test-grade,
td.test-grade,
th.student-grade,
td.student-grade {
  width: calc(var(--point-input-size) + 13ch + 3 * $spacer);
}

// Mobile view
@media (max-width: ($bkd-tests-mobile-breakpoint)) {
  .desktop:not(.selected),
  .student-grade:not(.selected),
  .student-average,
  .test-grade:not(.selected) {
    display: none;
  }

  /*
  We have replaced the table layout with a flex layout for mobile screens. Otherwise, the table content does not behave
  responsively and the content is cut off.
  */
  table,
  tbody,
  thead {
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  th,
  tr {
    display: flex;
    width: 100%;
  }

  .student-name {
    flex: 1;
    display: block;
  }

  .test-grade {
    flex: none;
    display: block;
  }
}

// Desktop view
@media (min-width: ($bkd-tests-mobile-breakpoint + 1)) {
  .mobile {
    display: none;
  }

  .student-name {
    width: var(--student-name-column-width);
    min-width: var(--student-name-column-width);
    max-width: var(--student-name-column-width);
  }

  .student-grade {
    width: var(--student-grade-column-width);
    min-width: var(--student-grade-column-width);
    max-width: var(--student-grade-column-width);
  }

  .student-average {
    width: var(--student-average-column-width);
    min-width: var(--student-average-column-width);
    max-width: var(--student-average-column-width);
  }

  .test-grade {
    min-width: var(--test-grade-column-width);
    max-width: var(--test-grade-column-width);
  }

  th.sticky,
  td.sticky {
    position: sticky;
    left: 0;
    background-color: $white;
  }

  th.sticky.student-grade,
  td.sticky.student-grade {
    left: var(--student-grade-column-offset);
  }

  th.sticky.student-average,
  td.sticky.student-average {
    left: var(--student-average-column-offset);
  }
}

@media (max-width: $student-average-breakpoint) {
  // Since table filter cell uses colspan, we only reduce the average column's
  // width to 1px to hide it (but not its border)
  :host {
    --student-average-column-width: 1px;
  }
  .student-average {
    padding: 0;
    overflow: hidden;
  }
}
@media (min-width: ($student-average-breakpoint + 1)) {
  .student-average-inline {
    display: none;
  }
}
